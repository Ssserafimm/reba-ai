import React, { useState } from 'react';
import { useApp } from '../context/AppContext';
import { AlertTriangle, Phone, MessageCircle, MapPin, Clock, Heart } from 'lucide-react';

export default function EmergencyHelp() {
  const { state } = useApp();
  const [emergencyType, setEmergencyType] = useState<'crisis' | 'relapse' | 'medical' | null>(null);
  const [helpSent, setHelpSent] = useState(false);

  const handleEmergencyAction = (type: 'crisis' | 'relapse' | 'medical') => {
    setEmergencyType(type);
    // Simulate sending help request
    setTimeout(() => {
      setHelpSent(true);
    }, 1000);
  };

  const t = {
    en: {
      title: "Emergency Help",
      subtitle: "Immediate support in crisis situations",
      danger: "If you feel in danger",
      crisisThoughts: "Suicidal thoughts",
      crisisHelp: "Immediate help",
      relapseRisk: "Relapse risk",
      urgentSupport: "Urgent support",
      medicalHelp: "Medical help",
      ambulance: "Ambulance",
      back: "Go back",
      helpOnWay: "Help is on the way",
      helpSent: "We've sent a help signal. Specialists and volunteers in your area have been notified.",
      whatHappens: "What happens now:",
      notificationsSent: "Notifications sent to local specialists",
      locationShared: "Your approximate location shared with help services",
      contactSoon: "Someone will contact you within 15 minutes",
      tryTechniques: "While help is on the way, try one of these techniques:",
      contactsTitle: "Emergency contacts",
      coping: [
        { title: "4-7-8 Breathing Technique", description: "Inhale for 4, hold for 7, exhale for 8", icon: "ÔøΩÔøΩ", urgent: true },
        { title: "5-4-3-2-1 Grounding", description: "5 things you see, 4 you hear, 3 you feel, 2 smells, 1 taste", icon: "üåç", urgent: true },
        { title: "Cold Water", description: "Splash cold water on your face or hold ice", icon: "‚ùÑÔ∏è", urgent: true },
        { title: "Call a loved one", description: "Reach out to someone in your support network", icon: "üìû", urgent: false },
        { title: "Leave the situation", description: "If possible, leave the triggering environment", icon: "üö™", urgent: false },
        { title: "Journal", description: "Write down all your thoughts and feelings", icon: "üìù", urgent: false }
      ],
      contacts: [
        { name: "Crisis Line", phone: "1-800-273-8255", description: "24/7 psychological help", type: "crisis" },
        { name: "Addiction Help", phone: "1-800-662-4357", description: "Emergency addiction help", type: "addiction" },
        { name: "Ambulance", phone: "911", description: "Emergency medical help", type: "medical" },
        { name: "Rescue Service", phone: "112", description: "General emergency number", type: "emergency" }
      ]
    },
    ru: {
      title: "–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å",
      subtitle: "–ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ –∫—Ä–∏–∑–∏—Å–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö",
      danger: "–ï—Å–ª–∏ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–±—è –≤ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
      crisisThoughts: "–°—É–∏—Ü–∏–¥–∞–ª—å–Ω—ã–µ –º—ã—Å–ª–∏",
      crisisHelp: "–ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å",
      relapseRisk: "–†–∏—Å–∫ —Å—Ä—ã–≤–∞",
      urgentSupport: "–°—Ä–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
      medicalHelp: "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å",
      ambulance: "–°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å",
      back: "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥",
      helpOnWay: "–ü–æ–º–æ—â—å —É–∂–µ –≤ –ø—É—Ç–∏",
      helpSent: "–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–∏–≥–Ω–∞–ª –æ –ø–æ–º–æ—â–∏. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –∏ –≤–æ–ª–æ–Ω—Ç—ë—Ä—ã –≤ —Ç–≤–æ—ë–º —Ä–∞–π–æ–Ω–µ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã.",
      whatHappens: "–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–µ–π—á–∞—Å:",
      notificationsSent: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –º–µ—Å—Ç–Ω—ã–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º",
      locationShared: "–¢–≤–æ—ë –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–æ —Å–ª—É–∂–±–∞–º –ø–æ–º–æ—â–∏",
      contactSoon: "–ö—Ç–æ-—Ç–æ —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç",
      tryTechniques: "–ü–æ–∫–∞ –ø–æ–º–æ—â—å –≤ –ø—É—Ç–∏, –ø–æ–ø—Ä–æ–±—É–π –æ–¥–Ω—É –∏–∑ —ç—Ç–∏—Ö —Ç–µ—Ö–Ω–∏–∫:",
      contactsTitle: "–¢–µ–ª–µ—Ñ–æ–Ω—ã —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø–æ–º–æ—â–∏",
      coping: [
        { title: "–¢–µ—Ö–Ω–∏–∫–∞ –¥—ã—Ö–∞–Ω–∏—è 4-7-8", description: "–í–¥–æ—Ö –Ω–∞ 4 —Å—á—ë—Ç–∞, –∑–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ 7, –≤—ã–¥–æ—Ö –Ω–∞ 8", icon: "ü´Å", urgent: true },
        { title: "–ó–∞–∑–µ–º–ª–µ–Ω–∏–µ 5-4-3-2-1", description: "5 –≤–µ—â–µ–π –∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥–∏—à—å, 4 –∫–æ—Ç–æ—Ä—ã–µ —Å–ª—ã—à–∏—à—å, 3 –∫–æ—Ç–æ—Ä—ã–µ —á—É–≤—Å—Ç–≤—É–µ—à—å, 2 –∑–∞–ø–∞—Ö–∞, 1 –≤–∫—É—Å", icon: "ÔøΩÔøΩ", urgent: true },
        { title: "–•–æ–ª–æ–¥–Ω–∞—è –≤–æ–¥–∞", description: "–£–º–æ–π—Å—è —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–¥–æ–π –∏–ª–∏ –ø–æ–¥–µ—Ä–∂–∏ –ª—ë–¥", icon: "‚ùÑÔ∏è", urgent: true },
        { title: "–ü–æ–∑–≤–æ–Ω–∏ –±–ª–∏–∑–∫–æ–º—É", description: "–°–≤—è–∂–∏—Å—å —Å –∫–µ–º-—Ç–æ –∏–∑ —Ç–≤–æ–µ–π —Å–µ—Ç–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏", icon: "üìû", urgent: false },
        { title: "–ü–æ–∫–∏–Ω—å —Å–∏—Ç—É–∞—Ü–∏—é", description: "–ï—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ, —É–π–¥–∏ –∏–∑ —Ç—Ä–∏–≥–≥–µ—Ä–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏", icon: "üö™", urgent: false },
        { title: "–ù–∞–ø–∏—à–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫", description: "–í—ã–ø–∏—à–∏ –≤—Å–µ –º—ã—Å–ª–∏ –∏ —á—É–≤—Å—Ç–≤–∞ –Ω–∞ –±—É–º–∞–≥—É", icon: "üìù", urgent: false }
      ],
      contacts: [
        { name: "–ö—Ä–∏–∑–∏—Å–Ω–∞—è —Å–ª—É–∂–±–∞", phone: "8-800-2000-122", description: "–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å", type: "crisis" },
        { name: "–ù–∞—Ä–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å", phone: "8-800-200-0200", description: "–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –Ω–∞—Ä–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å", type: "addiction" },
        { name: "–°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å", phone: "103", description: "–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å", type: "medical" },
        { name: "–°–ª—É–∂–±–∞ —Å–ø–∞—Å–µ–Ω–∏—è", phone: "112", description: "–ï–¥–∏–Ω—ã–π –Ω–æ–º–µ—Ä —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É–∂–±", type: "emergency" }
      ]
    }
  };
  const tr = t[state.language];

  const emergencyContacts = tr.contacts;

  const copingStrategies = tr.coping;

  if (helpSent) {
    return (
      <div className="max-w-4xl mx-auto">
        <div className="bg-white rounded-lg shadow-sm p-8 text-center">
          <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-6">
            <Heart className="w-8 h-8 text-green-600" />
          </div>
          <h2 className="text-2xl font-bold text-gray-900 mb-4">–ü–æ–º–æ—â—å —É–∂–µ –≤ –ø—É—Ç–∏</h2>
          <p className="text-gray-600 mb-6">
            –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–∏–≥–Ω–∞–ª –æ –ø–æ–º–æ—â–∏. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –∏ –≤–æ–ª–æ–Ω—Ç—ë—Ä—ã –≤ —Ç–≤–æ—ë–º —Ä–∞–π–æ–Ω–µ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã.
          </p>
          
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-6 mb-6">
            <h3 className="font-semibold text-blue-900 mb-2">–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–µ–π—á–∞—Å:</h3>
            <div className="space-y-2 text-sm text-blue-800">
              <div className="flex items-center">
                <Clock className="w-4 h-4 mr-2" />
                –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –º–µ—Å—Ç–Ω—ã–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º
              </div>
              <div className="flex items-center">
                <MapPin className="w-4 h-4 mr-2" />
                –¢–≤–æ—ë –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–æ —Å–ª—É–∂–±–∞–º –ø–æ–º–æ—â–∏
              </div>
              <div className="flex items-center">
                <Phone className="w-4 h-4 mr-2" />
                –ö—Ç–æ-—Ç–æ —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç
              </div>
            </div>
          </div>

          <div className="space-y-4">
            <p className="text-gray-700">
              –ü–æ–∫–∞ –ø–æ–º–æ—â—å –≤ –ø—É—Ç–∏, –ø–æ–ø—Ä–æ–±—É–π –æ–¥–Ω—É –∏–∑ —ç—Ç–∏—Ö —Ç–µ—Ö–Ω–∏–∫:
            </p>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {copingStrategies.filter(s => s.urgent).map((strategy, index) => (
                <div key={index} className="bg-gray-50 rounded-lg p-4 text-left">
                  <div className="flex items-center mb-2">
                    <span className="text-2xl mr-3">{strategy.icon}</span>
                    <h4 className="font-semibold text-gray-900">{strategy.title}</h4>
                  </div>
                  <p className="text-sm text-gray-600">{strategy.description}</p>
                </div>
              ))}
            </div>
          </div>

          <button
            onClick={() => {
              setHelpSent(false);
              setEmergencyType(null);
            }}
            className="mt-6 bg-gray-200 text-gray-800 px-6 py-2 rounded-lg hover:bg-gray-300 transition-colors"
          >
            –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="max-w-6xl mx-auto space-y-6">
      <div className="bg-white rounded-lg shadow-sm">
        <div className="border-b border-gray-200 p-6">
          <div className="flex items-center">
            <AlertTriangle className="w-8 h-8 text-red-600 mr-3" />
            <div>
              <h2 className="text-2xl font-bold text-gray-900">–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å</h2>
              <p className="text-gray-600">–ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ –∫—Ä–∏–∑–∏—Å–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö</p>
            </div>
          </div>
        </div>

        <div className="p-6">
          <div className="bg-red-50 border border-red-200 rounded-lg p-6 mb-6">
            <h3 className="text-lg font-semibold text-red-900 mb-4">–ï—Å–ª–∏ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–±—è –≤ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h3>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <button
                onClick={() => handleEmergencyAction('crisis')}
                className="bg-red-600 text-white p-4 rounded-lg hover:bg-red-700 transition-colors flex flex-col items-center"
              >
                <AlertTriangle className="w-8 h-8 mb-2" />
                <span className="font-semibold">–°—É–∏—Ü–∏–¥–∞–ª—å–Ω—ã–µ –º—ã—Å–ª–∏</span>
                <span className="text-sm opacity-90">–ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å</span>
              </button>
              
              <button
                onClick={() => handleEmergencyAction('relapse')}
                className="bg-orange-600 text-white p-4 rounded-lg hover:bg-orange-700 transition-colors flex flex-col items-center"
              >
                <Heart className="w-8 h-8 mb-2" />
                <span className="font-semibold">–†–∏—Å–∫ —Å—Ä—ã–≤–∞</span>
                <span className="text-sm opacity-90">–°—Ä–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</span>
              </button>
              
              <button
                onClick={() => handleEmergencyAction('medical')}
                className="bg-purple-600 text-white p-4 rounded-lg hover:bg-purple-700 transition-colors flex flex-col items-center"
              >
                <Phone className="w-8 h-8 mb-2" />
                <span className="font-semibold">–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å</span>
                <span className="text-sm opacity-90">–°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å</span>
              </button>
            </div>
          </div>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div className="bg-white rounded-lg shadow-sm p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
            <Phone className="w-5 h-5 mr-2 text-blue-600" />
            –¢–µ–ª–µ—Ñ–æ–Ω—ã —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø–æ–º–æ—â–∏
          </h3>
          <div className="space-y-4">
            {emergencyContacts.map((contact, index) => (
              <div key={index} className="border border-gray-200 rounded-lg p-4">
                <div className="flex items-center justify-between mb-2">
                  <h4 className="font-semibold text-gray-900">{contact.name}</h4>
                  <a
                    href={`tel:${contact.phone}`}
                    className="bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700 transition-colors"
                  >
                    –ü–æ–∑–≤–æ–Ω–∏—Ç—å
                  </a>
                </div>
                <p className="text-sm text-gray-600 mb-2">{contact.description}</p>
                <p className="text-lg font-mono text-blue-600">{contact.phone}</p>
              </div>
            ))}
          </div>
        </div>

        <div className="bg-white rounded-lg shadow-sm p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
            <Heart className="w-5 h-5 mr-2 text-green-600" />
            –¢–µ—Ö–Ω–∏–∫–∏ —Å–∞–º–æ–ø–æ–º–æ—â–∏
          </h3>
          <div className="space-y-4">
            {copingStrategies.map((strategy, index) => (
              <div key={index} className={`border rounded-lg p-4 ${
                strategy.urgent ? 'border-red-200 bg-red-50' : 'border-gray-200'
              }`}>
                <div className="flex items-start">
                  <span className="text-2xl mr-3">{strategy.icon}</span>
                  <div>
                    <h4 className="font-semibold text-gray-900 mb-1">
                      {strategy.title}
                      {strategy.urgent && (
                        <span className="ml-2 text-xs bg-red-100 text-red-800 px-2 py-1 rounded-full">
                          –°—Ä–æ—á–Ω–æ
                        </span>
                      )}
                    </h4>
                    <p className="text-sm text-gray-600">{strategy.description}</p>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      <div className="bg-white rounded-lg shadow-sm p-6">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">–¢–≤–æ—è —Å–µ—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫–∏</h3>
        <div className="bg-gray-50 rounded-lg p-6 text-center">
          <MessageCircle className="w-12 h-12 text-gray-400 mx-auto mb-4" />
          <p className="text-gray-600 mb-4">
            –î–æ–±–∞–≤—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–±—è –≤ —Ç—Ä—É–¥–Ω—É—é –º–∏–Ω—É—Ç—É
          </p>
          <button className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors">
            –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏
          </button>
        </div>
      </div>
    </div>
  );
}